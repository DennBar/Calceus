@page "/admin/categories/{page:int}"
@inject NavigationManager NavigationManager
@inject ICategoryService CategoryService
@attribute [Authorize(Roles = "admin")]
@implements IDisposable

<PageTitle>Categorías</PageTitle>

<div class="container">
    @if (isProcessing)
    {
        <div class="my-lg-5 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary"
             style="width: 3rem; height: 3rem;"
             role="status">
            </div>
        </div>
    }
    else
    {
        <h3 class="py-2"> Categorías</h3>

        <button class="btn btn-primary my-4" @onclick="AddCategory">
            <i class="bi bi-plus"></i> Nueva categoría
        </button>

        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th scope="col">Nombre</th>
                    <th scope="col">Url</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var category in CategoryService.AdminCategories)
                {
                    <tr scope="row">
                        <td>@category.Name</td>
                        <td>@category.Url</td>
                        <td>
                            <button class="btn btn-primary" @onclick="(()=>EditCategory(category.Id))">
                                <i class="bi bi-pencil-fill"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    }
</div>

@code {
    [Parameter]
    public int Page { get; set; } = 1;

    bool isProcessing { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        isProcessing = true;
        await CategoryService.GetAdminCategories(Page);
        CategoryService.CategoryChanged += StateHasChanged;
        isProcessing = false;
    }

    protected override async Task OnParametersSetAsync()
    {
        await CategoryService.GetAdminCategories(Page);
    }

    public void Dispose()
    {
        CategoryService.CategoryChanged -= StateHasChanged;
    }

    protected void AddCategory()
    {
        NavigationManager.NavigateTo("admin/category");
    }

    protected void EditCategory(int categoryId)
    {
        NavigationManager.NavigateTo($"admin/category/{categoryId}");
    }
}
