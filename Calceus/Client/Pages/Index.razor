@page "/"
@page "/{categoryUrl}"
@inject ICategoryService CategoryService
@inject IProductService ProductService
@implements IDisposable

<PageTitle>Calceus</PageTitle>

<section class="home-banner">
    <div class="banner p-lg-3 px-lg-5">
        <div class="row">
            <div class="col-lg-6 banner-container">
                <div class="banner-inner">
                    <h3>Calzado 100% ecuatoriano</h3>
                    <p class="fw-bold">Apoyando al pequeño productor</p>
                </div>
            </div>
            <div class="col-lg-6 banner-image">
                <img src="/images/shoes.png" alt="" />
            </div>
        </div>
    </div>
</section>

@if (isProcessing)
{
    <div class="d-flex align-items-center justify-content-center">
        <div class="spinner-border text-primary"
         style="width: 3rem; height: 3rem;"
         role="status">
        </div>
    </div>
}
else
{
    <div class="container popular-products-categories section">
        <h3 class="title">Categorías</h3>
        <ul>
            <li>
                <a href="/">
                    Todo <span>/</span>
                </a>
            </li>
            @foreach (var category in CategoryService.CustomerCategories)
            {
                <li>
                    <a href="@category.Url">
                        @category.Name <span>/</span>
                    </a>
                </li>
            }
        </ul>
        <div class="container my-5">
            <div class="row gy-5 popular-products-grid">
                @foreach (var product in ProductService.Products)
                {
                    <div class="col-lg-4 col-md-6 item">
                        <div class="card shadow">

                            <div class="product-image">
                                <img class="img-fluid" src="@product.Images[0].Data" alt="@product.Name" />
                            </div>
                            <div class="d-flex justify-content-between px-3">
                                <small class="m-0">Categoría: <span>@product.Category.Name</span></small>
                            </div>
                            <div class="product-details my-2 d-flex justify-content-between px-3">
                                <p class="m-0 fw-bold">
                                    @product.Name
                                </p>
                                @if (product.Stores.Count > 0)
                                {
                                    <small><b>$ @product.Stores[0].Price</b></small>
                                }
                            </div>
                            <hr class="m-0" />
                            <div class="d-flex justify-content-evenly p-3">
                                <a class="btn bg-none" href="product/@product.Id">
                                    <i class="bi bi-cart-plus-fill" style="font-size:2rem"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}



@code {
    [Parameter]
    public string? CategoryUrl { get; set; } = null;

    bool isProcessing { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        isProcessing = true;
        await CategoryService.GetCustomerCategories();
        ProductService.ProductChanged += StateHasChanged;
        isProcessing = false;
    }

    protected override async Task OnParametersSetAsync()
    {
        isProcessing = true;
        await ProductService.GetAllProducts(CategoryUrl);
        isProcessing = false;
    }

    public void Dispose()
    {
        ProductService.ProductChanged -= StateHasChanged;
    }
}
