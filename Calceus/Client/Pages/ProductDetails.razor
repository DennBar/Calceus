@page "/product/{id:int}"
@inject IProductService ProductService
@inject IStoreService StoreService

<PageTitle>Detalle del producto</PageTitle>

<div class="container my-5">
    @if (isProcessing)
    {
        <div class="my-lg-5 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary"
             style="width: 3rem; height: 3rem;"
             role="status">
            </div>
        </div>
    }
    else
    {
        @if (errorMessage.Length > 0)
        {
            <div class="py-2">
                <div class="alert alert-dismissible alert-danger">
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    <strong>@errorMessage</strong>
                </div>
            </div>
        }
        else
        {
            <div class="card">
                <div class="container-fluid">
                    <div class="wrapper row">
                        <div class="col-md-6">
                            <img src="@product.Images[0].Data" alt="@product.Name" />
                        </div>
                        <div class="details col-md-6">
                            <h3 class="product-name fw-bold">@product.Name</h3>
                            <p class="product-description">@product.Description</p>

                            <select class="form-select" @bind="SelectedSizeEc">
                                <option value="0" selected disabled>select</option>

                                @for (int i = 1; i <= StoreService.Stores.Count; i++)
                                {
                                    <option value="@i">@StoreService.Stores[i-1].SizeEc</option>
                                }
                            </select>

                            @if (SelectedSizeEc != default)
                            {
                                currentStoreList = StoreService.Stores[SelectedSizeEc - 1].StoreList.ToList();


                                <select class="form-select" @bind="SelectedColorId">
                                    <option value="@(0)" selected disabled>select</option>
                                    @foreach (var store in currentStoreList)
                                    {
                                        <option value="@store.ColorId">@store.Color.Name</option>
                                    }
                                </select>

                                currentStore = currentStoreList.FirstOrDefault(s => s.ColorId == SelectedColorId);

                                @if (currentStore != null)
                                {
                                    <h3>@currentStore.Price</h3>
                                }
                            }
                            <div class="action">
                                <button class="btn btn-primary add-to-cart" @onclick="AddToCart">
                                    Añadir al carro
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        }
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    Product product = new Product();

    bool isProcessing { get; set; } = false;
    string errorMessage { get; set; } = string.Empty;
    int InitialSizeEc;
    int SelectedSizeEc
    {
        get => InitialSizeEc;
        set
        {
            InitialSizeEc = value;
            SelectedColorId = default;
        }
    }
    int SelectedColorId { get; set; }
    List<Store> currentStoreList = new List<Store>();
    Store currentStore = new Store();

    protected override async Task OnParametersSetAsync()
    {
        isProcessing = true;

        Product _product = (await ProductService.GetProductById(Id)).Data;

        if (_product == null)
        {
            errorMessage = "Producto no encontrado";
            return;
        }
        else
        {
            product = _product;

            await StoreService.GetStoreByProductIdGroupBySize(Id);
        }

        isProcessing = false;
    }    

    private void AddToCart()
    {
        Console.WriteLine(currentStoreList.Count);
        if (currentStoreList.Count > 0 && currentStore != null)
        {
            Console.WriteLine(currentStore.Price);
        }
        else
        {
            Console.WriteLine("Escoge oe");
        }
    }
}
