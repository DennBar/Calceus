@page "/product/{id:int}"
@inject IProductService ProductService
@inject IStoreService StoreService

<PageTitle>Detalle del producto</PageTitle>

<div class="container my-5">
    @if (isProcessing)
    {
        <div class="my-lg-5 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary"
             style="width: 3rem; height: 3rem;"
             role="status">
            </div>
        </div>
    }
    else
    {
        @if (errorMessage.Length > 0)
        {
            <div class="py-2">
                <div class="alert alert-dismissible alert-danger">
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    <strong>@errorMessage</strong>
                </div>
            </div>
        }
        else
        {
            <div class="card">
                <div class="container-fluid">
                    <div class="wrapper row">
                        <div class="col-md-6">
                            <img src="@product.Images[0].Data" alt="@product.Name" />
                        </div>
                        @*<div class="details col-md-6">
                            <h3 class="product-name fw-bold">@product.Name</h3>
                            <p class="product-description">@product.Description</p>
                            @if (product.Stores != null && product.Stores.Count > 0)
                            {
                                <div class="mb-3">
                                    <select class="form-select" @bind="currentStoreId">
                                        @foreach (var store in product.Stores)
                                        {
                                            <option value="@store.Id">@store.Size.Ec</option>
                                        }
                                    </select>
                                </div>
                            }
                            @if (GetSelectedStoreData() != null)
                            {
                                <h5 class="price">Color: <span>$ @GetSelectedStoreData().Color.Name</span></h5>
                                <h5 class="price">Precio: <span>$ @GetSelectedStoreData().Price</span></h5>
                            }
                            <div class="action">
                                <button class="btn btn-primary add-to-cart">Añadir al carro</button>
                            </div>
                        </div>*@
                    </div>
                </div>
            </div>
            <div>
                @foreach (var item in StoreService.Stores)
                {
                    <h3>@item.Price</h3>
                }
            </div>
        }
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    Product product = new Product();

    bool isProcessing { get; set; } = false;
    string errorMessage { get; set; } = string.Empty;
    int currentStoreId { get; set; } = 1;

    protected override async Task OnParametersSetAsync()
    {
        isProcessing = true;

        Product _product = (await ProductService.GetProductById(Id)).Data;

        await StoreService.GetStoreByProductIdGroupBySize(Id);
        
        if (_product == null)
        {
            errorMessage = "$Producto no encontrado";
            return;
        }
        else
        {
            product = _product;
            if (product.Stores.Count > 0)
            {
                currentStoreId = product.Stores[0].Id;
            }
        }

        isProcessing = false;
    }

    private Store GetSelectedStoreData()
    {
        var store = product.Stores.FirstOrDefault(s => s.Id == currentStoreId);
        return store;
    }
}
