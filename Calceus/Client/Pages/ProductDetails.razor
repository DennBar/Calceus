@page "/product/{id:int}"
@inject IProductService ProductService
@inject IStoreService StoreService
@inject ICartService CartService

<PageTitle>Detalle del producto</PageTitle>

<div class="container my-5">
    @if (isProcessing)
    {
        <div class="my-lg-5 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary"
             style="width: 3rem; height: 3rem;"
             role="status">
            </div>
        </div>
    }
    else
    {
        @if (mainErrorMessage.Length > 0)
        {
            <div class="py-2">
                <div class="alert alert-dismissible alert-danger">
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    <strong>@mainErrorMessage</strong>
                </div>
            </div>
        }
        else
        {
            <div class="card p-3 bg-opacity-50">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <img class="mx-auto d-block" src="@product.Images[0].Data" alt="@product.Name" />
                        </div>
                        <div class="col-md-6">
                            <h3 class="fw-bold">@product.Name</h3>
                            <p class="mt-4">@product.Description</p>
                            <div class="input-group mt-4">
                                <div class="input-group mt-3">
                                    <span class="input-group-text bg-primary"><i class="bi bi-rulers" style="color:#fff"></i></span>
                                    <select class="form-select" @bind="SelectedSizeEc">
                                        <option value="0" selected disabled>select</option>
                                        @for (int i = 1; i <= StoreService.Stores.Count; i++)
                                        {
                                            <option value="@i">@StoreService.Stores[i-1].SizeEc</option>
                                        }
                                    </select>
                                </div>

                                @if (SelectedSizeEc != default)
                                {
                                    currentStoreList = StoreService.Stores[SelectedSizeEc - 1].StoreList.ToList();

                                    <div class="input-group mt-3">
                                        <span class="input-group-text bg-primary"><i class="bi bi-palette-fill" style="color:#fff"></i></span>
                                        <select class="form-select" @bind="SelectedColorId">
                                            <option value="0" selected disabled>select</option>
                                            @foreach (var store in currentStoreList)
                                            {
                                                <option value="@store.ColorId">@store.Color.Name</option>
                                            }
                                        </select>
                                    </div>

                                    currentStore = currentStoreList.FirstOrDefault(s => s.ColorId == SelectedColorId);

                                    @if (currentStore != null)
                                    {
                                        <div class="input-group mt-3">
                                            <span class="input-group-text bg-primary"><i class="bi bi-currency-dollar" style="color:#fff"></i></span>
                                            <input type="text" disabled class="form-control" @bind="currentStore.Price" aria-label="Amount (to the nearest dollar)">
                                        </div>
                                    }
                                }
                            </div>
                            <button class="btn btn-primary w-100 mt-4 fw-semibold shadow-sm" @onclick="AddToCart">
                                Añadir al carro
                            </button>
                            @if (secondaryErrorMessage.Length > 0)
                            {
                                <div class="py-2">
                                    <div class="alert alert-dismissible alert-danger">
                                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                                        <strong>@secondaryErrorMessage</strong>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    Product product = new Product();

    bool isProcessing { get; set; } = false;
    string mainErrorMessage { get; set; } = string.Empty;
    string secondaryErrorMessage { get; set; } = string.Empty;
    int InitialSizeEc;
    int SelectedSizeEc
    {
        get => InitialSizeEc;
        set
        {
            InitialSizeEc = value;
            SelectedColorId = default;
        }
    }
    int SelectedColorId { get; set; }
    List<Store> currentStoreList = new List<Store>();
    Store currentStore = new Store();

    protected override async Task OnParametersSetAsync()
    {
        isProcessing = true;

        Product _product = (await ProductService.GetProductById(Id)).Data;

        if (_product == null)
        {
            mainErrorMessage = "Producto no encontrado";
            return;
        }
        else
        {
            product = _product;

            await StoreService.GetStoreByProductIdGroupBySize(Id);
        }

        isProcessing = false;
    }

    private async Task AddToCart()
    {
        if (currentStoreList.Count > 0 && currentStore != null)
        {
            var cartItem = new Cart
                {
                    ProductId = product.Id,
                    SizeId = currentStore.SizeId,
                    ColorId = currentStore.ColorId,
                };

            await CartService.AddToCart(cartItem);
        }
        else
        {
            secondaryErrorMessage = "Debes seleccionar una talla y un color para continuar";
        }
    }
}
