@page "/register"
@inject IAuthService AuthService

<PageTitle>Register</PageTitle>

<div class="container">
    <h3>Regístrate</h3>
    <EditForm Model="user" OnValidSubmit="RegisterHandler">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="email">Correo Electrónico</label>
            <InputText id="email" @bind-Value="user.Email" class="form-control" />
            <ValidationMessage For="@(()=>user.Email)" />
        </div>
        <div class="mb-3">
            <label for="password">Contraseña</label>
            <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
            <ValidationMessage For="@(()=>user.Password)" />
        </div>
        <div class="mb-3">
            <label for="confirmPassword">Confirmar Contraseña</label>
            <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
            <ValidationMessage For="@(()=>user.ConfirmPassword)" />
        </div>
        <button type="submit" class="btn btn-primary">Registrar</button>
        <div class="@messageCssClass">
            <span>@message</span>
        </div>
    </EditForm>
</div>

@code {
    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task RegisterHandler()
    {
        var result = await AuthService.Register(user);

        message = result.Message;

        if (result.Success)
        {
            messageCssClass = "text-success";
        }
        else
        {
            messageCssClass = "text-danger";
        }
    }
}
