@page "/register"
@inject IRoleService RoleService
@inject IAuthService AuthService

<PageTitle>Register</PageTitle>

<div class="container">
    @if (isProcessing)
    {
        <div class="my-lg-5 d-flex align-items-center justify-content-center">
            <div class="spinner-border text-primary"
             style="width: 3rem; height: 3rem;"
             role="status">
            </div>
        </div>
    }
    else
    {
        <h3 class="py-2">Regístrate</h3>
        <EditForm Model="user" OnValidSubmit="RegisterHandler">
            <DataAnnotationsValidator />
            <div class="mb-3">
                <label for="email">Correo Electrónico</label>
                <InputText id="email" @bind-Value="user.Email" class="form-control" />
                <ValidationMessage For="@(()=>user.Email)" />
            </div>
            <div class="mb-3">
                <label for="password">Contraseña</label>
                <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
                <ValidationMessage For="@(()=>user.Password)" />
            </div>
            <div class="mb-3">
                <label for="confirmPassword">Confirmar Contraseña</label>
                <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
                <ValidationMessage For="@(()=>user.ConfirmPassword)" />
            </div>
            <div class="mb-3">
                <div class="form-group">
                    <label for="role">Rol del usuario</label>
                    <InputSelect @bind-Value="@user.RoleId" class="form-select">
                        <option value="0" disabled="disabled" selected>Selecciona un Rol</option>
                        @foreach (var role in RoleService.Roles)
                        {
                            <option value="@role.Id">@role.Name</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(()=>user.RoleId)" />
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Registrar</button>
            @if (message.Length > 0)
            {
                <div class="py-2">
                    <div class="alert alert-dismissible @messageCssClass">
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        <strong>@message</strong>
                    </div>
                </div>
            }

        </EditForm>
    }
</div>

@code {
    UserRegister user = new UserRegister();

    bool isProcessing { get; set; } = false;

    string message = string.Empty;
    string messageCssClass = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        isProcessing = true;

        await RoleService.GetRoles();

        isProcessing = false;
    }

    async Task RegisterHandler()
    {
        isProcessing = true;

        var result = await AuthService.Register(user);

        message = result.Message;

        if (result.Success)
        {
            messageCssClass = "alert-success";
            isProcessing = false;
        }
        else
        {
            messageCssClass = "alert-danger";
            isProcessing = false;
        }
    }
}
